{"version":3,"sources":["components/NavBar.module.css","components/SearchBar.module.css","components/ItemList.module.css","components/NavBar.js","components/SearchBar.js","components/ItemList.js","App.js","index.js"],"names":["module","exports","NavBar","className","classes","navbar","h1","SearchBar","keyword","setKeyword","submitHandler","onSubmit","searchBar","type","required","id","input","value","placeholder","onChange","event","target","ItemList","items","grid","map","item","index","src","Poster","alt","Title","Year","imdbID","App","useState","setIsLoading","setData","replace","url","preventDefault","fetch","then","response","json","data","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,iBCAnED,EAAOC,QAAU,CAAC,KAAO,yB,qICWVC,MAVf,WACI,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,oBAAIF,UAAWC,IAAQE,GAAvB,SACI,gD,gBCoBDC,MAxBf,YAA4D,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAOtC,OACI,sBAAMC,SAAUD,EAAhB,SACI,sBAAKP,UAAWC,IAAQQ,UAAxB,UACI,uBACIC,KAAK,OACLC,UAAQ,EAACC,GAAG,SACZZ,UAAWC,IAAQY,MACnBC,MAAOT,EACPU,YAAY,uCACZC,SAdhB,SAAwBC,GAEpB,OADAX,EAAWW,EAAMC,OAAOJ,OACjBG,EAAMC,OAAOJ,SAcZ,wBAAQJ,KAAK,SAAb,0B,gBCADS,EAlBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhB,OACI,qBAAKpB,UAAWC,IAAQoB,KAAxB,SACI,6BAEKD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACP,+BACI,qBAAKC,IAAKF,EAAKG,OAAQC,IAAKJ,EAAKK,QACjC,4BAAKL,EAAKK,QACV,4BAAKL,EAAKM,SAHLN,EAAKO,OAASN,WCiC5BO,MAnCf,WACI,MAA8BC,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgBC,EAAhB,KACA,EAAkC0B,oBAAS,GAA3C,mBAAkBC,GAAlB,WACA,EAAyBD,mBAAS,IAAlC,mBAAOZ,EAAP,KAAcc,EAAd,KACMrB,EAAQR,EAAQ8B,QAAQ,IAAK,KAC7BC,EAAG,mDAA+CvB,GAmBxD,OACI,sBAAKb,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWK,QAASA,EAASC,WAAYA,EAAYC,cAnBvC,SAACU,GAEnBA,EAAMoB,iBAENJ,GAAa,GAEbK,MAAMF,GACDG,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHR,EAAQQ,EAAKC,QACbV,GAAa,SAUhBb,GAAS,cAAC,EAAD,CAAUA,MAAOA,QCjCvCwB,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAAC,EAAD,IADJ,OAGAC,SAASC,eAAe,W","file":"static/js/main.b939d34c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2UpCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__W2Qbi\",\"input\":\"SearchBar_input__3Mb6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ItemList_grid__2MdkZ\"};","import classes from './NavBar.module.css';\n\nfunction NavBar() {\n    return (\n        <div className={classes.navbar}>\n            <h1 className={classes.h1}>\n                <span>WEBFLIX</span>\n            </h1>\n        </div>\n    )\n};\n\nexport default NavBar;","import classes from './SearchBar.module.css';\n\nfunction SearchBar({ keyword, setKeyword, submitHandler }) {\n    // Display content after user input\n    function displayHandler(event) {\n        setKeyword(event.target.value);\n        return event.target.value;\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className={classes.searchBar}>\n                <input \n                    type='text' \n                    required id='search' \n                    className={classes.input} \n                    value={keyword}\n                    placeholder='Search for series or movies by title' \n                    onChange={displayHandler}\n                />\n                <button type='submit'>Search</button>\n            </div>\n        </form>\n    )\n};\n\nexport default SearchBar;","import classes from './ItemList.module.css';\n\nconst ItemList = ({ items }) => {\n    \n    return (\n        <div className={classes.grid}>\n            <ul>\n                {/* Map through the results array and display and content */}\n                {items.map((item, index) => (\n                    <li key={item.imdbID + index} >\n                        <img src={item.Poster} alt={item.Title} />\n                        <p>{ item.Title }</p>\n                        <p>{ item.Year }</p>\n                    </li>       \n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default ItemList;","import './App.css';\nimport NavBar from './components/NavBar';\nimport SearchBar from './components/SearchBar';\n//import Sort from './components/Sort';\nimport ItemList from './components/ItemList';\nimport { useState } from 'react';\n\nfunction App() {\n    const [keyword, setKeyword] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [items, setData] = useState([]);\n    const input = keyword.replace(' ', '+');\n    const url = `http://www.omdbapi.com/?apikey=f0e4ff4&s=${input}`;\n\n    // Handle event when user clicks the search bar submit button\n    const submitHandler = (event) => {\n        // Prevent browser from submitting, but to submit asynchronously with Fetch API\n        event.preventDefault();\n        // Set a loading state, when data is fetched, update the data\n        setIsLoading(true);\n        // Fetch API\n        fetch(url)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                setData(data.Search);\n                setIsLoading(false);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <NavBar />\n            <SearchBar keyword={keyword} setKeyword={setKeyword} submitHandler={submitHandler}/>\n            {/* <Sort items={items} /> */}\n            {/* Conditional rendering only after getting back the data */}\n            {items && <ItemList items={items} />}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />,\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}